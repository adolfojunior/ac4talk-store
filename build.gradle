buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath("io.spring.gradle:dependency-management-plugin:${springDependencyManagement}")
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath("org.jsonschema2pojo:jsonschema2pojo-gradle-plugin:${jsonSchema2pojoVersion}")
  }
}

apply from: rootProject.file("gradle/plugins.gradle")

// Core library for services
project(":base-service-api") {
  apply plugin: ApiProject
}

project(":base-service-client") {
  apply plugin: SpringBootLibrary
  dependencies {
    compile("org.glassfish.jersey.core:jersey-client:${jerseyClientVersion}")
    compile("org.glassfish.jersey.ext:jersey-proxy-client:${jerseyClientVersion}")
  }
}

project(":base-service-starter") {
  apply plugin: SpringBootLibrary
  dependencies {
    compile project(":base-service-api")
    compile project(":base-service-client")
    compile("org.springframework.boot:spring-boot-starter-web") {
      exclude module:"spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-jersey")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.data:spring-data-commons")
    // compile("org.springframework.cloud:spring-cloud-starter-consul-config:${springCloudVersion}")
    // compile("org.springframework.cloud:spring-cloud-starter-consul-discovery:${springCloudVersion}")
  }
}

project(":cart-api") {
  apply plugin: ServiceApiProject
}
project(":cart-client") {
  apply plugin: ServiceClientProject
  dependencies {
    compile project(":cart-api")
  }
}
project(":cart-service") {
  apply plugin: ServiceProject
  dependencies {
    compile project(":cart-api")
    compile project(":product-client")
    compile project(":promotion-client")
  }
}

project(":product-api") {
  apply plugin: ServiceApiProject
}
project(":product-client") {
  apply plugin: ServiceClientProject
  dependencies {
    compile project(":product-api")
  }
}
project(":product-service") {
  apply plugin: ServiceProject
  dependencies {
    compile project(":product-api")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("com.h2database:h2")
  }
}

project(":promotion-api") {
  apply plugin: ServiceApiProject
}
project(":promotion-client") {
  apply plugin: ServiceClientProject
  dependencies {
    compile project(":promotion-api")
  }
}
project(":promotion-service") {
  apply plugin: ServiceProject
  dependencies {
    compile project(":promotion-api")
  }
}

